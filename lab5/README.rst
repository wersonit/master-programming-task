О задании
=========

Предоставление примера использования концепции ``variant``.

Требования
==========

Все рекурсивные случаи должны зависеть только от себя самих.
Не нужно смешивать использование других реализаций.

Необходимо прохождение всех тестов.

Подсказки
=========

#. Изучите ``std::variant`` и ``std::get(std::variant)``.
#. Активно используйте ``using``, чтобы вытянуть конструкторы базового класса, например, ``using vector::vector;``.
#. Можно использовать ``std::shared_ptr`` или ``boost::recursive_wrapper``, чтобы описать рекурсивный тип.
#. ``constexpr`` - лучший друг.
#. ``std::disjunction_v`` - это как оператор ``||``.
#. Метод ``as`` работает аналогично ``std::get``.
#. `Переиспользование кода <https://stackoverflow.com/questions/123758/how-do-i-remove-code-duplication-between-similar-const-and-non-const-member-func>`_.
#. Используйте ``variant_decorator`` для реализации ``recursive_map``.
